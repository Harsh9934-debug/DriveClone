<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <title>DataVault</title>

    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #000000;
            color: #ffffff;
        }
        .nav-bar {
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid #333;
        }
        .main-card {
            background-color: #1a1a1a;
            border: 1px solid #333;
        }
        .feature-card {
            background-color: #2a2a2a;
            border: 1px solid #444;
        }
        .btn-primary {
            background-color: #2563eb;
            color: white;
            transition: background-color 0.3s ease;
        }
        .btn-primary:hover {
            background-color: #1d4ed8;
        }
        .btn-secondary {
            background-color: transparent;
            border: 1px solid #3b82f6;
            color: #3b82f6;
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        .btn-secondary:hover {
            background-color: #3b82f6;
            color: white;
        }
        .modal-card {
            background-color: #1a1a1a;
            border: 1px solid #333;
        }
        .dropzone {
            border: 2px dashed #444;
            background-color: #2a2a2a;
        }
        .dropzone.drag-over {
            border-color: #2563eb;
            background-color: rgba(37, 99, 235, 0.1);
        }
        .form-input {
            background-color: #2a2a2a;
            border: 1px solid #444;
            color: #ffffff;
        }
        .form-input:focus {
            outline: none;
            border-color: #2563eb;
            box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.4);
        }
        .progress-bar-bg {
            background-color: #444;
        }
        .progress-bar-fill {
            background-color: #2563eb;
        }
    </style>
</head>

<body class="min-h-screen">

    <nav class="nav-bar sticky top-0 z-20">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center">
                    <div class="flex items-center mr-4">
                        <div class="w-10 h-10 bg-blue-600 rounded-xl flex items-center justify-center">
                            <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M4 3a2 2 0 100 4h12a2 2 0 100-4H4z"></path>
                                <path fill-rule="evenodd" d="M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" clip-rule="evenodd"></path>
                            </svg>
                        </div>
                        <span class="ml-3 text-2xl font-bold text-white">DataVaulte</span>
                    </div>
                </div>
                <div class="hidden md:block">
                    <div class="flex items-center space-x-6">
                        <a href="/home" class="text-white px-4 py-2 rounded-lg text-sm font-medium bg-gray-700">Upload</a>
                        <a href="/files" class="text-gray-300 hover:text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-gray-800 transition-colors">My Files</a>
                        <a href="/public-files" class="text-gray-300 hover:text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-gray-800 transition-colors">Public Gallery</a>
                        <button onclick="logout()" class="text-gray-300 hover:text-red-400 px-4 py-2 rounded-lg text-sm font-medium hover:bg-red-500/20 transition-colors">Logout</button>
                    </div>
                </div>
                <div class="md:hidden">
                    <button id="mobile-menu-button" class="text-gray-300 hover:text-white p-2">
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
        <div id="mobile-menu" class="md:hidden hidden bg-black/90 backdrop-blur-lg border-t border-gray-800">
            <div class="px-4 pt-4 pb-6 space-y-2">
                <a href="/home" class="text-white block px-4 py-3 text-base font-medium bg-gray-700 rounded-lg">Upload</a>
                <a href="/files" class="text-gray-300 hover:text-white block px-4 py-3 text-base font-medium hover:bg-gray-800 rounded-lg transition-colors">My Files</a>
                <a href="/public-files" class="text-gray-300 hover:text-white block px-4 py-3 text-base font-medium hover:bg-gray-800 rounded-lg transition-colors">Public Gallery</a>
                <button onclick="logout()" class="text-gray-300 hover:text-red-400 block px-4 py-3 text-base font-medium w-full text-left hover:bg-red-500/20 rounded-lg transition-colors">Logout</button>
            </div>
        </div>
    </nav>

    <main class="flex flex-col justify-center items-center p-4 py-16">
        <div class="w-full max-w-3xl p-10 text-center main-card rounded-3xl shadow-2xl">
            <div class="mb-8">
                <div class="inline-flex items-center justify-center w-20 h-20 bg-blue-600 rounded-2xl mb-6">
                    <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                    </svg>
                </div>
                <h1 class="text-5xl font-bold text-white mb-4">
                    Secure File Upload
                </h1>
                <p class="text-gray-400 text-xl mb-8 max-w-lg mx-auto">
                    Upload and manage your files with robust security and fast performance.
                </p>
            </div>

            <div class="flex flex-col sm:flex-row gap-6 justify-center">
                <button onclick="openUploadModal()" class="group btn-primary px-8 py-4 rounded-xl text-lg font-semibold transform hover:scale-105">
                    <span class="flex items-center justify-center">
                        <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                        </svg>
                        Upload New File
                    </span>
                </button>
                <a href="/files" class="group btn-secondary px-8 py-4 rounded-xl text-lg font-semibold">
                    <span class="flex items-center justify-center">
                        <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                        </svg>
                        View My Files
                    </span>
                </a>
            </div>

            <div class="mt-12 grid grid-cols-1 sm:grid-cols-3 gap-6">
                <div class="feature-card rounded-xl p-6">
                    <div class="text-3xl mb-2">üîí</div>
                    <h3 class="text-lg font-semibold text-white mb-2">Encrypted Storage</h3>
                    <p class="text-gray-400 text-sm">Your files are protected with AES-256 encryption.</p>
                </div>
                <div class="feature-card rounded-xl p-6">
                    <div class="text-3xl mb-2">‚ö°</div>
                    <h3 class="text-lg font-semibold text-white mb-2">Lightning Fast</h3>
                    <p class="text-gray-400 text-sm">Optimized upload speeds for efficiency.</p>
                </div>
                <div class="feature-card rounded-xl p-6">
                    <div class="text-3xl mb-2">üåê</div>
                    <h3 class="text-lg font-semibold text-white mb-2">Global Access</h3>
                    <p class="text-gray-400 text-sm">Access your files from anywhere in the world.</p>
                </div>
            </div>
        </div>

        <div id="upload-modal" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4 hidden">
            <div class="relative w-full max-w-2xl modal-card rounded-3xl shadow-2xl">
                <div class="flex items-center justify-between p-8 border-b border-gray-700">
                    <h3 class="text-2xl font-bold text-white">Share Your File</h3>
                    <button id="close-modal-button" onclick="closeUploadModal()" class="text-gray-400 hover:text-white p-2 rounded-lg hover:bg-gray-700 transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                <div class="p-8">
                    <form id="uploadForm" action="/upload-file" method="post" enctype="multipart/form-data">
                        <label id="dropzone-label" for="dropzone-file" class="dropzone flex flex-col items-center justify-center w-full p-12 rounded-2xl cursor-pointer transition-all duration-300">
                            <div id="dropzone-content" class="flex flex-col items-center justify-center text-center">
                                <div class="w-16 h-16 bg-blue-600 rounded-2xl flex items-center justify-center mb-6">
                                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                                    </svg>
                                </div>
                                <p class="mb-3 text-lg text-gray-300">
                                    <span class="font-semibold text-blue-400">Click to upload</span> or drag and drop
                                </p>
                                <p class="text-sm text-gray-500">Max file size: 100MB</p>
                            </div>
                            <div id="file-preview" class="hidden text-center">
                                <img id="image-preview" src="#" alt="Image Preview" class="hidden max-h-48 mx-auto rounded-xl shadow-lg mb-6 border border-gray-600"/>
                                <div id="file-icon-preview" class="hidden w-24 h-24 mx-auto mb-6 text-blue-400">
                                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                    </svg>
                                </div>
                                <p id="file-name-display" class="text-lg font-semibold text-white mb-2"></p>
                                <p id="file-size-display" class="text-sm text-gray-400"></p>
                            </div>
                            <input id="dropzone-file" name="file" type="file" class="hidden" />
                        </label>
                        <div class="mt-8 space-y-6">
                            <div>
                                <label for="description" class="block text-sm font-medium text-gray-300 mb-3">
                                    Description (optional)
                                </label>
                                <input 
                                    type="text" 
                                    id="description" 
                                    name="description"
                                    class="form-input w-full px-4 py-3 rounded-xl placeholder-gray-500"
                                    placeholder="Add a description for your file..."
                                />
                            </div>
                            <div class="flex items-start space-x-4">
                                <input 
                                    type="checkbox" 
                                    id="isPublic" 
                                    name="isPublic"
                                    class="mt-1 h-5 w-5 text-blue-600 focus:ring-blue-500 border-gray-600 rounded bg-gray-800"
                                />
                                <div>
                                    <label for="isPublic" class="text-lg font-medium text-white">
                                        Make this file public
                                    </label>
                                    <p class="text-sm text-gray-400 mt-1">
                                        Public files can be viewed by anyone.
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div id="progress-container" class="mt-8 hidden">
                            <div class="flex justify-between text-sm text-gray-300 mb-2">
                                <span>Uploading...</span>
                                <span id="progress-text">0%</span>
                            </div>
                            <div class="w-full progress-bar-bg rounded-full h-3">
                                <div id="progress-bar" class="progress-bar-fill h-3 rounded-full transition-all duration-500 ease-out" style="width: 0%"></div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="flex items-center justify-end p-8 border-t border-gray-700 space-x-4">
                    <button id="cancel-button" onclick="closeUploadModal()" type="button" class="px-6 py-3 text-sm font-medium text-gray-300 bg-gray-700 hover:bg-gray-600 rounded-xl transition-colors">
                        Cancel
                    </button>
                    <button type="submit" form="uploadForm" class="btn-primary px-8 py-3 font-medium rounded-xl text-sm">
                        Upload File
                    </button>
                </div>
            </div>
        </div>
    </main>

    <script>
        // Modal functions
        function openUploadModal() {
            document.getElementById('upload-modal').classList.remove('hidden');
            document.body.style.overflow = 'hidden';
        }

        function closeUploadModal() {
            document.getElementById('upload-modal').classList.add('hidden');
            document.body.style.overflow = 'auto';
            resetForm();
        }

        // Elements
        const dropzoneLabel = document.getElementById('dropzone-label');
        const fileInputEl = document.getElementById('dropzone-file');
        const dropzoneContent = document.getElementById('dropzone-content');
        const filePreview = document.getElementById('file-preview');
        const imagePreview = document.getElementById('image-preview');
        const fileIconPreview = document.getElementById('file-icon-preview');
        const fileNameDisplay = document.getElementById('file-name-display');
        const fileSizeDisplay = document.getElementById('file-size-display');
        const progressContainer = document.getElementById('progress-container');
        const progressBar = document.getElementById('progress-bar');
        const progressText = document.getElementById('progress-text');
        const uploadForm = document.getElementById('uploadForm');

        // File size formatter
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Drag and drop functionality
        dropzoneLabel.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropzoneLabel.classList.add('drag-over');
        });

        dropzoneLabel.addEventListener('dragleave', (e) => {
            e.preventDefault();
            dropzoneLabel.classList.remove('drag-over');
        });

        dropzoneLabel.addEventListener('drop', (e) => {
            e.preventDefault();
            dropzoneLabel.classList.remove('drag-over');
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                fileInputEl.files = files;
                handleFileSelection();
            }
        });

        // File selection
        fileInputEl.addEventListener('change', handleFileSelection);

        function handleFileSelection() {
            if (fileInputEl.files.length > 0) {
                const file = fileInputEl.files[0];
                fileNameDisplay.textContent = file.name;
                fileSizeDisplay.textContent = formatFileSize(file.size);

                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = (e) => { imagePreview.src = e.target.result; }
                    reader.readAsDataURL(file);
                    imagePreview.classList.remove('hidden');
                    fileIconPreview.classList.add('hidden');
                } else {
                    imagePreview.classList.add('hidden');
                    fileIconPreview.classList.remove('hidden');
                }

                dropzoneContent.classList.add('hidden');
                filePreview.classList.remove('hidden');
            }
        }

        // Form submission
        uploadForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            if (!fileInputEl.files.length) {
                showNotification('Please select a file to upload', 'error');
                return;
            }

            progressContainer.classList.remove('hidden');
            
            const formData = new FormData(uploadForm);
            const xhr = new XMLHttpRequest();

            xhr.open('POST', '/upload-file', true);

            xhr.upload.onprogress = function(event) {
                if (event.lengthComputable) {
                    const percentComplete = (event.loaded / event.total) * 100;
                    progressBar.style.width = percentComplete + '%';
                    progressText.textContent = Math.round(percentComplete) + '%';
                }
            };

            xhr.onload = function() {
                if (xhr.status === 200) {
                    const result = JSON.parse(xhr.responseText);
                    showNotification(`File "${result.file.originalName}" uploaded successfully!`, 'success');
                    setTimeout(() => {
                        closeUploadModal();
                    }, 1500);
                } else {
                    try {
                        const result = JSON.parse(xhr.responseText);
                        showNotification('Error: ' + result.message, 'error');
                    } catch (e) {
                        showNotification('An unknown error occurred.', 'error');
                    }
                    progressContainer.classList.add('hidden');
                }
            };

            xhr.onerror = function() {
                showNotification('Upload failed. Please check your connection and try again.', 'error');
                progressContainer.classList.add('hidden');
            };

            xhr.send(formData);
        });

        // Notification system
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-5 right-5 px-6 py-4 rounded-xl z-50 transition-all duration-300 ${
                type === 'success' ? 'bg-green-600 text-white' : 'bg-red-600 text-white'
            }`;
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.opacity = '0';
                notification.style.transform = 'translateY(-20px)';
                setTimeout(() => notification.remove(), 300);
            }, 4000);
        }

        // Reset form
        function resetForm() {
            uploadForm.reset();
            fileInputEl.value = '';
            dropzoneContent.classList.remove('hidden');
            filePreview.classList.add('hidden');
            progressContainer.classList.add('hidden');
            progressBar.style.width = '0%';
            progressText.textContent = '0%';
        }

        // Mobile menu toggle
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        
        if (mobileMenuButton) {
            mobileMenuButton.addEventListener('click', () => {
                mobileMenu.classList.toggle('hidden');
            });
        }

        // Close modal when clicking outside
        document.getElementById('upload-modal').addEventListener('click', (e) => {
            if (e.target === e.currentTarget) {
                closeUploadModal();
            }
        });

        // Logout functionality
        window.logout = async function() {
            try {
                const response = await fetch('/user/logout', {
                    method: 'POST',
                    credentials: 'include'
                });
                window.location.href = '/';
            } catch (error) {
                window.location.href = '/user/login';
            }
        };
    </script>
</body>
</html>